{"version":3,"sources":["views/LoginPage/FirstTimeLogin.jsx","views/AuthenticatedPage.jsx"],"names":["FirstTimeLogin","props","_this","Object","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","handleSubmit","_ref2","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","values","_ref","setSubmitting","wrap","_context","prev","next","authenticatedApiCall","password","cnfpassword","then","response","console","log","data","status","localStorage","removeItem","setState","resetPassworSuccess","unauthenticated","catch","error","stop","_x","_x2","apply","arguments","dismissDialog","history","replace","logout","_callee2","_context2","push","handleFirstTimeLogin","handleShowPassword","showPassword","handleHidePassword","handleShowConfPassword","confPassword","showCnfPassword","handleHideConfPassword","t","formikValidation","object","shape","string","required","min","matches","oneOf","ref","state","language","i18n","handleTermCondition","getItem","_this2","_this$props","classes","firstTimeLoginButton","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","className","errorBtn","onClick","react_helmet__WEBPACK_IMPORTED_MODULE_25__","key","_components_Grid_GridContainer__WEBPACK_IMPORTED_MODULE_23__","style","backgroundColor","marginBottom","_components_Grid_GridItem__WEBPACK_IMPORTED_MODULE_24__","lg","md","sm","xs","marginTop","padding","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","variant","login","formik__WEBPACK_IMPORTED_MODULE_19__","initialValues","acceptTerms","termCondition","onSubmit","validationSchema","component","FormikTextField","label","onChange","handleChange","name","fullWidth","InputProps","type","endAdornment","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","position","_material_ui_icons_Visibility__WEBPACK_IMPORTED_MODULE_14___default","icnColor","_material_ui_icons_VisibilityOff__WEBPACK_IMPORTED_MODULE_15___default","color","textAlign","primaryBtn","size","_components_Card_Card_jsx__WEBPACK_IMPORTED_MODULE_16__","boxShadow","_components_Card_CardBody_jsx__WEBPACK_IMPORTED_MODULE_17__","LoginHeading","loginSuccess","_components_Card_CardFooter_jsx__WEBPACK_IMPORTED_MODULE_18__","cardFooter","_components_ErrorDialog__WEBPACK_IMPORTED_MODULE_26__","successButton","HeaderText","dismiss","React","Component","withTranslation","AuthenticatedPage","withStyles","theme","palette","text","textPrimaryColor","primary","main","border","primaryBorder","width","borderRadius","&:hover","hoverPrimaryColor","hoverTextPrimaryColor","hoverPrimaryBorder","margin","fontWeight","lineHeight","TermsCondition","textDecoration","cursor","fontSize","fntSz_16","firstTimeLoginTitle","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__","paddingTop","breakpoints","down","padTop","clrWhite","fntSze20","LoginSubHeading","justifyContent","withTheme","withUser","withRouter","_React$Component","withAuthorization","_getPrototypeOf2","_len","length","args","Array","_key","concat","isError","makeAuthenticatedAPICall","method","url","result","_result","axios","headers","x-access-token","sent","abrupt","t0","currentUser","refreshTokens","t1","_x3","getRedirectQueryString","redirectTo","qs","queryString","stringify","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_averma_Desktop_EduSamadhan_React_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","value","userObj","react__WEBPACK_IMPORTED_MODULE_7___default","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","to","location","pathname","assign","loggedInUserObj","tieAuthorization"],"mappings":"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","file":"static/js/14.4e2e7380.chunk.js","sourcesContent":["import React from 'react';\r\nimport AuthenticatedPage from \"../AuthenticatedPage\";\r\nimport { withStyles, InputAdornment, Button, Typography } from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport Card from \"../../components/Card/Card.jsx\";\r\nimport CardBody from \"../../components/Card/CardBody.jsx\";\r\nimport CardFooter from \"../../components/Card/CardFooter.jsx\";\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { string, object, boolean, ref } from 'yup';\r\nimport FormikTextField from '../../components/FormikValidatedComponents/TextField';\r\nimport { withTranslation } from 'react-i18next';\r\nimport GridContainer from '../../components/Grid/GridContainer';\r\nimport GridItem from '../../components/Grid/GridItem';\r\nimport { Helmet } from \"react-helmet\";\r\nimport ErrorDialog from '../../components/ErrorDialog';\r\n\r\nconst styles = theme => ({\r\n    primaryBtn: {\r\n        color: theme.palette.text.textPrimaryColor, backgroundColor: theme.palette.primary.main, border: \"1px solid \" + theme.palette.border.primaryBorder, width: \"50%\", borderRadius: \"25px\", padding: \"10px\", marginTop: \"-35px\",\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.hoverPrimaryColor.main, color: theme.palette.text.hoverTextPrimaryColor, border: \"1px solid \" + theme.palette.border.hoverPrimaryBorder\r\n        }\r\n    },\r\n    errorBtn: { color: theme.palette.text.textPrimaryColor, backgroundColor: theme.palette.primary.main, border: \"1px solid \" + theme.palette.border.primaryBorder, borderRadius: \"50px\", margin: \"8px 0\", textAlign: \"right\", padding: \"6px 17px\", fontWeight: \"400\", lineHeight: \"1.42857143\", '&:hover': { backgroundColor: theme.palette.hoverPrimaryColor.main, color: theme.palette.text.hoverTextPrimaryColor, border: \"1px solid \" + theme.palette.border.hoverPrimaryBorder } },\r\n    TermsCondition: { color: \"#1a8eeb\", textDecoration: \"underline\", backgroundColor: \"transparent\", border: \"none\", textAlign: \"left\", cursor: \"pointer\", fontSize: \"16px\", padding: \"1px 10px\" },\r\n    fntSz_16: { fontSize: \"16px\" },\r\n    firstTimeLoginTitle: { color: \"#515974\", fontSize: \"18px !important\", fontWeight: \"800\" },\r\n    loginSuccess: { fontSize: \"18px\", fontWeight: \"500\", marginBottom: \"15px\" },\r\n    login: { width: \"400px\", paddingTop: \"25%\", [theme.breakpoints.down('md')]: { width: \"330px\", paddingTop: '5%' }, },\r\n    padTop: { padding: \"0 40px\", paddingTop: \"40%\", color: \"#fff\" },\r\n    clrWhite: { color: \"#fff !important\", },\r\n    fntSze20: { fontSize: \"18px !important\" },\r\n    LoginHeading: { fontSize: \"30px !important\", fontWeight: \"900 !important\", color: \"rgba(0, 0, 102, 1) !important\" },\r\n    LoginSubHeading: { fontSize: \"18px !important\", color: \"rgba(109, 111, 123, 1)  !important\", textAlign: \"left\", lineHeight: \"24px  !important\" },\r\n    cardFooter: { justifyContent: \"flex-end\", padding: 0, margin: \"30px 0 20px\" },\r\n    icnColor: { cursor: \"pointer\" }\r\n});\r\n\r\nclass FirstTimeLogin extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const { t } = this.props;\r\n        this.formikValidation = object().shape({\r\n            password: string().required(\"This fiels is required.\").min(8, \"Password must be 8 character log.\").matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#_?&^+=-])[A-Za-z\\d$@$!%*#_?&^+=-]{8,}$/, \"Passqord condition.\"),\r\n            cnfpassword: string().required(\"This fiels is required.\").oneOf([ref('password')], \"Confirm password is not matching.\"),\r\n        });\r\n        this.state = {\r\n            resetPassworSuccess: true, language: this.props.i18n.language, unauthenticated: false,\r\n            handleTermCondition: false, password: \"password\", showPassword: true, confPassword: \"password\", showCnfPassword: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if ((localStorage.getItem(\"accessToken\") == null) || (localStorage.getItem(\"refreshToken\") == null)) {\r\n            this.props.history.push(`../login`)\r\n        }\r\n    }\r\n    handleSubmit = async (values, { setSubmitting }) => {\r\n        await this.props.authenticatedApiCall('post', '/api/providerauthservice/changePassword', {\r\n            password: values.password,\r\n            cnfpassword: values.cnfpassword\r\n        }).then(response => {\r\n            console.log(\"response\", response)\r\n            setSubmitting(false);\r\n            if (response.data.status === 1) {\r\n                localStorage.removeItem(\"accessToken\");\r\n                localStorage.removeItem(\"refreshToken\")\r\n                this.setState({ resetPassworSuccess: false })\r\n            } else if (response.data.status === 0) {\r\n                this.setState({ unauthenticated: true })\r\n            }\r\n        }).catch((error) => {\r\n            this.setState({ unauthenticated: true })\r\n            setSubmitting(false);\r\n            console.log(error);\r\n        });\r\n    }\r\n    //handle dismissDialog\r\n    dismissDialog = () => {\r\n        this.setState({ resetPassworSuccess: true });\r\n        this.props.history.replace(`../login`)\r\n    }\r\n    logout = async () => {\r\n        localStorage.removeItem(\"__warningPopShownForSession\")\r\n        localStorage.removeItem(\"getAccountId\")\r\n        localStorage.removeItem(\"UserAuth\")\r\n        localStorage.removeItem(\"UserObject\")\r\n\r\n        await this.props.authenticatedApiCall('get', '/api/providerauthservice/signout', null).then(response => {\r\n            if (response.status == 200) {\r\n                this.props.history.push('/public');\r\n            }\r\n        })\r\n    }\r\n    handleFirstTimeLogin = () => {\r\n        this.setState({ unauthenticated: false });\r\n        this.props.history.push('./guest')\r\n    }\r\n    handleShowPassword = () => {\r\n        this.setState({ password: \"text\", showPassword: false })\r\n    }\r\n    handleHidePassword = () => {\r\n        this.setState({ password: \"password\", showPassword: true })\r\n    }\r\n    handleShowConfPassword = () => {\r\n        this.setState({ confPassword: \"text\", showCnfPassword: false })\r\n    }\r\n    handleHideConfPassword = () => {\r\n        this.setState({ confPassword: \"password\", showCnfPassword: true })\r\n    }\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        var firstTimeLoginButton = [<Button className={classes.errorBtn} onClick={this.handleFirstTimeLogin}>ok</Button>]\r\n        var HeaderText = \"Unauthentication\";\r\n        return (\r\n            <div>\r\n                <Helmet>\r\n                    <title>\r\n                        FirstTimeLogin\r\n                    </title>\r\n                </Helmet>\r\n                <div key={this.props.i18n.language}>\r\n                    <GridContainer style={{ backgroundColor: \"#fff\", marginBottom: \"25px\" }}>\r\n                        <GridItem lg={5} md={5} sm={12} xs={12} style={{ marginTop: \"15px\", padding: '10px' }}>\r\n                            <Typography variant=\"h5\">First Time Reset Password.</Typography>\r\n                        </GridItem>\r\n                        <GridItem lg={7} md={7} sm={12} xs={12}>\r\n                            <div className={classes.login}>\r\n                                {(this.state.resetPassworSuccess ? <Formik initialValues={{ password: \"\", cnfpassword: \"\", acceptTerms: false, termCondition: false }} onSubmit={this.handleSubmit} validationSchema={this.formikValidation}\r\n                                >\r\n                                    {(props) => (\r\n                                        <Form>\r\n                                            <Field\r\n                                                component={FormikTextField}\r\n                                                label=\"Enter your New Password.\"\r\n                                                onChange={this.handleChange}\r\n                                                name=\"password\"\r\n                                                fullWidth\r\n                                                variant=\"filled\"\r\n                                                InputProps={{\r\n                                                    type: this.state.password,\r\n                                                    endAdornment: (\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            {this.state.showPassword ? <VisibilityIcon onClick={this.handleShowPassword} className={classes.icnColor} /> : <VisibilityOffIcon onClick={this.handleHidePassword} className={classes.icnColor} />}\r\n                                                        </InputAdornment>\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                            <p>Password rules <span style={{ color: \"rgba(65, 117, 5, 1)\" }}>Password must be 8 character long.</span> | <span style={{ color: \"rgba(65, 117, 5, 1)\" }}></span> | <span style={{ color: \"rgba(65, 117, 5, 1)\" }}>123</span> | <span style={{ color: \"rgba(65, 117, 5, 1)\" }}>@!$%^*()</span> | <span style={{ color: \"rgba(65, 117, 5, 1)\" }}>≠ email</span></p>\r\n                                            <Field\r\n                                                component={FormikTextField}\r\n                                                label=\"Confirm your password.\"\r\n                                                fullWidth\r\n                                                name=\"cnfpassword\"\r\n                                                variant=\"filled\"\r\n                                                InputProps={{\r\n                                                    type: this.state.confPassword,\r\n                                                    endAdornment: (\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            {this.state.showCnfPassword ? <VisibilityIcon onClick={this.handleShowConfPassword} className={classes.icnColor} /> : <VisibilityOffIcon onClick={this.handleHideConfPassword} className={classes.icnColor} />}\r\n                                                        </InputAdornment>\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                            <div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div style={{ textAlign: \"right\" }}>\r\n                                                    <br />\r\n                                                    <br />\r\n                                                    <Button type=\"submit\" className={classes.primaryBtn} size=\"small\" > Confirm </Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Form>\r\n                                    )}\r\n\r\n                                </Formik> : <Card style={{ boxShadow: \"none\" }}>\r\n                                        <CardBody>\r\n                                            <Typography className={classes.LoginHeading}>Successfull.</Typography><br />\r\n                                            <Typography variant=\"h4\" color=\"inherit\" className={classes.loginSuccess}>Your password has been updated successfully.</Typography>\r\n                                            {/* <Typography variant=\"h4\" color=\"inherit\" className={classes.loginSuccess}>{t('common.COMMON__LOGIN_WITH_NEW_PASSWORD')}</Typography> */}\r\n                                        </CardBody>\r\n                                        <br />\r\n                                        <CardFooter className={classes.cardFooter} >\r\n                                            <Button className={classes.primaryBtn} size=\"small\" onClick={this.dismissDialog}>\r\n                                                Login\r\n                                            </Button>\r\n                                        </CardFooter>\r\n                                    </Card>)}\r\n                            </div>\r\n                        </GridItem>\r\n\r\n                    </GridContainer>\r\n                </div>\r\n                {(this.state.unauthenticated ? <ErrorDialog successButton={firstTimeLoginButton} HeaderText={HeaderText} dismiss={this.handleFirstTimeLogin} /> : \"\")}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(AuthenticatedPage()(withStyles(styles, { withTheme: true })(FirstTimeLogin)));\r\n","import  React from \"react\";\r\nimport withUser from '../views/LoginPage/WithUser';\r\nimport _ from 'lodash';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router\";\r\nimport queryString from 'query-string'\r\n\r\n\r\nfunction tieAuthorization(Component) {\r\n  return class withAuthorization extends React.Component {\r\n    state = { isError: false }\r\n    makeAuthenticatedAPICall = async (method, url, data) => {\r\n      try {\r\n        try {\r\n          let result = await axios({\r\n            method: method,\r\n            url: url,\r\n            headers: { 'x-access-token': localStorage.getItem(\"accessToken\") },\r\n            data: data\r\n          });\r\n          if (result.status === 200) {\r\n            return result;\r\n          }\r\n          else {\r\n            this.setState({ isError: true })\r\n          }\r\n        }\r\n        catch (error) {\r\n          if (error.response.status = 401) {\r\n            await this.props.currentUser.refreshTokens();\r\n            let result = await axios({\r\n              method: method,\r\n              url: url,\r\n              headers: { 'x-access-token': localStorage.getItem(\"accessToken\") },\r\n              data: data\r\n            });\r\n            if (result.status === 200) {\r\n              return result\r\n            }\r\n            else {\r\n              this.setState({ isError: true })\r\n            }\r\n\r\n          }\r\n          throw error;\r\n        }\r\n      } catch (ex) {\r\n        console.log(\"ERROR:\", ex);\r\n        this.setState({ isError: true })\r\n      }\r\n    }\r\n    getRedirectQueryString = function (redirectTo) {\r\n      let qs = { redirectTo };\r\n      return `?${queryString.stringify(qs)}`;\r\n    }\r\n    render() {\r\n      const { currentUser: userObj } = this.props;\r\n      return (\r\n        this.state.isError ? <Redirect to={`/guest/login${this.getRedirectQueryString(this.props.location.pathname)}`} /> : <Component loggedInUserObj={userObj} authenticatedApiCall={this.makeAuthenticatedAPICall} {...this.props} />\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst AuthenticatedPage = () => Component => {\r\n\r\n  return withUser(withRouter(tieAuthorization(Component)));\r\n\r\n}\r\n\r\nexport default AuthenticatedPage;\r\n\r\n"],"sourceRoot":""}